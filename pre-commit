#!/bin/sh

# reference: https://stackoverflow.com/questions/31057527/git-pre-commit-hook-to-format-and-re-add-files-at-the-same-time
# https://medium.com/@harshitbangar/automatic-code-formatting-with-git-66c3c5c26798
# Python format
# Regexp for grep to only choose some file extensions for formatting
exts="\.\(py\)$"

formatter=`which black`

# Format staged files
change_list=`git diff --cached --name-only --diff-filter=ACMR | grep $exts | xargs`
if [ ! -z "$change_list" ]
then
    for file in $change_list
    do
        "$formatter" --check "$file"
        ret=$?
        if [ $ret -ne 0 ]
        then
            echo "formatting $file"
            "$formatter" "$file"
            "git add $file"
            ret=$?
        
            if [ $ret -ne 0 ]
            then
                echo "ERROR on python formatting"
                exit 1
            else
                echo "python formatting finished!"
            fi
        fi
    done
else
    echo "we don't need to format any python files!"
fi




# ts/tsx format
# Regexp for grep to only choose some file extensions for formatting
exts="\.\(ts\|tsx\)$"

# The formatter to use
formatter="frontend/node_modules/.bin/prettier"

change_list=`git diff --cached --name-only --diff-filter=ACMR | grep $exts | xargs`
if [ ! -z "$change_list" ]
then
    for file in $change_list
    do
        "$formatter" --check "$file"
        ret=$?
        if [ $ret -ne 0 ]
        then
            echo "formatting $file"
            "$formatter" --write "$file"
            "git add $file"
            ret=$?
        
            if [ $ret -ne 0 ]
            then
                echo "ERROR on python formatting"
                exit 1
            else
                echo "python formatting finished!"
            fi
        fi
    done
else
    echo "we don't need to format any python files!"
fi

# run pylint 
#
cd backend/beafamily
pylint --load-plugins pylint_django --rcfile .pylintrc **/*.py
ret=$?
if [ $ret -ne 0 ]
then
    echo "ERROR on pylint"
    exit 1
else
    echo "pylint passed!"
fi


# run eslint
cd ../..
cd frontend
./node_modules/.bin/eslint src

ret=$?
if [ $ret -ne 0 ]
then
    echo "ERROR on eslint"
    exit 1
else
    echo "eslint passed!"
fi

cd ..
